
BasicGame.MainMenu = function (game) {

  this.music = null;
  this.playButton = null;

};

BasicGame.MainMenu.prototype = {

  create: function () {
    this.stage.backgroundColor = '#ddd';
    this.pageTexts = [];
    this.changePage("main");
  },

  changePage: function (page) {
    this.page = page;
    while (this.pageTexts.length > 0) {
      var text = this.pageTexts.pop();
      text.destroy();
    }
    if (this.page === "main") {
      this.addCenteredText(280, 150, "zero");
      var startGame = this.addCenteredText(800, 60, "START GAME");
      startGame.inputEnabled = true;
      startGame.events.onInputDown.add(function () { this.startGame() }, this);
      var howToPlay = this.addCenteredText(900, 60, "HOW TO PLAY");
      howToPlay.inputEnabled = true;
      howToPlay.events.onInputDown.add(function () { this.changePage("rules") }, this);
      this.addCenteredText(1000, 28, "CHALLENGES");
      var mod7 = this.addCenteredText(1050, 60, "MOD7");
      mod7.inputEnabled = true;
      mod7.events.onInputDown.add(function () { 
        this.game.mod = 7;
        this.startGame() 
      }, this);
      this.addCenteredText(this.game.height - 75, 20, "v1.2.2");
      this.addCenteredText(this.game.height - 50, 20, "Copyright (c) 2015 Bryan Bibat");
    }
    if (this.page === "rules") {
      this.addCenteredText(360, 30, "connect digits so the sum ends in zero");
      this.addCenteredText(400, 30, "the higher the sum, the greater the points");
      this.addCenteredText(440, 30, "tap/click/drag to select or unselect digits");
      this.addCenteredText(540, 30, "each digit gives two extra seconds but");
      this.addCenteredText(580, 30, "has a chance to create blockers");

      this.addCenteredText(620, 30, "digits from prime length chains can clear");
      this.addCenteredText(660, 30, "blockers but only give a half second each");

      this.addCenteredText(760, 30, "aim for one million points");
      var back = this.addCenteredText(this.game.height / 2 + 455, 60, "Back To Main");
      back.inputEnabled = true;
      back.events.onInputDown.add(function () { this.changePage("main") }, this);
    }
  },

  addCenteredText: function (y, size, text) {
    var text = this.add.text(
      this.game.width / 2, y, text, 
      { font: size + "px Roboto Mono", fill: "#444", align: "center" }
    );
    text.anchor.setTo(0.5, 0.5);
    this.pageTexts.push(text);
    return text;
  },

  update: function () {
    if (this.page === "main") {
      if (this.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR)) {
        this.startGame();
      }
    }

  },

  startGame: function (pointer) {

    if (this.game.mod === undefined || this.game.mod === null) {
      this.game.mod = 10;
    }
    this.state.start('Game');

  }

};
